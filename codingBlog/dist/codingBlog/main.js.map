{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/add-post/add-post.component.ts","./src/app/add-post/add-post.component.html","./src/app/add-post/add-post.service.ts","./src/app/app.module.ts","./src/app/app.routing.ts","./src/app/background-image.directive.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/landing/landing.component.ts","./src/app/landing/landing.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/models/post.ts","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/root/root.component.ts","./src/app/root/root.component.html","./src/app/service/auth-guard.service.ts","./src/app/service/common.service.ts","./src/app/service/user.service.ts","./src/app/show-post/show-post.component.ts","./src/app/show-post/show-post.component.html","./src/app/show-post/show-post.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, TemplateRef, ViewChild, ElementRef  } from '@angular/core';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport { Post } from '../models/post';\nimport { Router } from '@angular/router';\nimport { AddPostService } from './add-post.service';\nimport { CommonService } from '../service/common.service';\n\n\n@Component({\n  selector: 'app-add-post',\n  templateUrl: './add-post.component.html',\n  styleUrls: ['./add-post.component.scss'],\n  providers: [ AddPostService ]\n})\nexport class AddPostComponent {\n\n  modalRef: BsModalRef;\n  public post : Post;\n \n\n  constructor(private modalService: BsModalService,  private bsModalRef: BsModalRef, private router: Router, private addPostService: AddPostService, private commonService: CommonService ) {\n    this.post = new Post();\n   }\n\n   ngOnInit() { \n    \n    this.commonService.postEdit_Observable.subscribe(res => {\n    this.post = this.commonService.post_to_be_edited;\n    console.log('post about ', this.post._id);\n    });\n   }\n   \n\n  close() {\n    this.bsModalRef.hide()\n  };\n\n\n  addPost() {\n  \tif(this.post.title && this.post.description){\n      if(this.post._id){\n        this.addPostService.updatePost(this.post).subscribe(res =>{\n         \n          this.commonService.notifyPostAddition();\n        });\n      } else {\n        this.addPostService.addPost(this.post).subscribe(res =>{\n          \n          this.commonService.notifyPostAddition();\n        });\n      }\n  \t} else {\n  \t\talert('Title and Description required');\n  \t}\n  }\n\n}\n","     <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\" id=\"exampleModalLabel\">Modal title</h5>\n                <button type=\"button\" #closeBtn class=\"close\" data-dismiss=\"modal\" aria-label=\"close\" (click)=\"close()\">\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n            </div>\n            <div class=\"modal-body\">\n \n \n                <form>\n                    <div class=\"form-group\">\n                        <label for=\"exampleInputEmail1\">Title</label>\n                        <input name=\"title\" type=\"text\" [(ngModel)]=\"post.title\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter title\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"exampleInputPassword1\">Description</label>\n                        <textarea name=\"description\" [(ngModel)]=\"post.description\" class=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Description\">\n                        </textarea>\n                    </div>\n \n                    \n \n                    <button (click)=\"addPost()\" type=\"button\" class=\"btn btn-primary\">Add</button>\n                    <button (click)=\"close()\" type=\"button\" class=\"btn btn-primary-right\" aria-label=\"close\">Close</button>\n                </form>\n \n \n            </div>\n        </div>\n\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Post } from '../models/post';\r\n \r\n@Injectable()\r\nexport class AddPostService {\r\n \r\n    constructor(private http: HttpClient){\r\n \r\n    }\r\n\r\n    //As seen in the above code, you have made use of the HttpClient to make the API call and return the Observable\r\n\r\n    addPost(post: Post){\r\n        return this.http.post('/api/post/createPost',{\r\n            title : post.title,\r\n            description : post.description\r\n        })\r\n    }\r\n\r\n    updatePost(post: Post){\r\n\t\treturn this.http.post('/api/post/updatePost',{\r\n\t\t\tid: post._id,\r\n\t\t\ttitle : post.title,\r\n\t\t\tdescription : post.description\r\n\t\t})\r\n\t}\r\n \r\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app.routing';\nimport { RouterModule } from '@angular/router';\nimport { ModalModule } from 'ngx-bootstrap/modal';\n\nimport { RootComponent } from './root/root.component';\n\nimport { UserService } from './service/user.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { LoginComponent } from './login/login.component';\nimport { AddPostComponent } from './add-post/add-post.component';\nimport { HomeComponent } from './home/home.component';\nimport { ShowPostComponent } from './show-post/show-post.component';\nimport { RegisterComponent } from './register/register.component';\nimport { AuthGuardService } from './service/auth-guard.service';\nimport { CommonService } from './service/common.service';\nimport { CommonModule } from '@angular/common';\nimport { LandingComponent } from './landing/landing.component';\nimport { BackgroundImageDirective } from './background-image.directive';\n\n@NgModule({\n  declarations: [\n    RootComponent,\n    LoginComponent,\n    RegisterComponent,\n    AddPostComponent,\n    HomeComponent,\n    ShowPostComponent,\n    LandingComponent,\n    BackgroundImageDirective,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule,\n    AppRoutingModule,\n    HttpClientModule,\n    CommonModule,\n    ModalModule.forRoot(),\n  ],\n\n  providers: [UserService, AuthGuardService, CommonService],\n  bootstrap: [RootComponent],\n})\nexport class AppModule {}\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LandingComponent } from './landing/landing.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { AddPostComponent } from './add-post/add-post.component';\r\nimport { RegisterComponent } from './register/register.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: LandingComponent },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'register', component: RegisterComponent },\r\n  { path: 'home', component: HomeComponent },\r\n  { path: 'add', component: AddPostComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Directive, Output, EventEmitter, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[appBackgroundImage]',\n})\nexport class BackgroundImageDirective {\n  @Output() imageLoaded: EventEmitter<boolean> = new EventEmitter<boolean>(\n    true\n  );\n\n  constructor(private el: ElementRef) {}\n\n  ngAfterViewInit() {\n    const img = new Image();\n    const bgStyle = getComputedStyle(this.el.nativeElement).backgroundImage;\n    const src = bgStyle.replace(/(^url\\()|(\\)$|[\\\"\\'])/g, '');\n    img.src = src;\n    img.addEventListener('load', () => {\n      this.imageLoaded.emit(true);\n    });\n  }\n}\n","import { Component, OnInit, ViewChild,ElementRef } from '@angular/core';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport { AddPostComponent } from '../add-post/add-post.component';\nimport { CommonService } from '../service/common.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  bsModalRef: BsModalRef;\n  @ViewChild('addPost') addBtn: ElementRef;\n\n  constructor(private modalService: BsModalService, private commonService: CommonService, private router: Router) {\n\n    if(!localStorage.getItem('loggedInUser')){\n      this.router.navigate(['/home']);\n  }\n\n    this.commonService.postEdit_Observable.subscribe(res => {\n      this.addBtn.nativeElement.click();\n  });\n\n   }\n ngOnInit(): void {\n    \n  }\n\n  public openAddPostComponent() {\n    console.log(\"this button was clicked\");\n    this.bsModalRef = this.modalService.show(AddPostComponent);\n    this.bsModalRef.content.closeModal = \"Close\"\n\n  }\n\n  logout(){\n    localStorage.removeItem('loggedInUser');\n    this.router.navigate(['/']);\n}\n\n}\n","<header class=\"header clearfix\">\n    <nav>\n        <ul class=\"nav nav-pills float-right\">\n            <li class=\"nav-item\">\n                <button type=\"button\" class=\"btn btn-primary\">\n                  Home\n                </button>\n            </li>\n            <!-- TO DO: <li class=\"nav-item\">\n                <button #addPost type=\"button\" class=\"btn btn-link\" data-target=\"#exampleModal\" (click)=\"openAddPostComponent()\">\n                  Add\n                </button>\n              \n            </li> -->\n            <li class=\"nav-item\">\n                 <button (click)=\"logout()\" type=\"button\" class=\"btn btn-link\">\n                  Logout\n                </button>\n            </li>\n        </ul>\n    </nav>\n    <h3 class=\"text-muted\">Angular Blog App</h3>\n</header>\n \n<main role=\"main\">\n    <app-show-post></app-show-post>\n</main>\n\n \n<footer class=\"footer\">\n    <img class= \"drawing\" src=\"../../assets/blog.png\">\n  <p>&copy; Lidia Davidson Quarantine Diary 2020</p>\n</footer>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-landing',\r\n  templateUrl: './landing.component.html',\r\n  styleUrls: ['./landing.component.scss'],\r\n})\r\nexport class LandingComponent implements OnInit {\r\n  navbarOpen = false;\r\n\r\n  constructor(public router: Router) {}\r\n\r\n  ngOnInit(): void {\r\n    const navbarItems = document.querySelectorAll('.navbar-nav>li');\r\n    navbarItems.forEach((navbarItem) => {\r\n      navbarItem.addEventListener('click', () => {\r\n        const navbar = document.querySelector('.navbar-collapse');\r\n        navbar.classList.remove('show');\r\n      });\r\n    });\r\n  }\r\n\r\n  loaded() {\r\n    console.log(\"loaded\");\r\n  }\r\n}\r\n","<div id=\"home\">\r\n  <!-- Navigation Bar -->\r\n  <nav class=\"navbar navbar-dark bg-dark navbar-expand-md fixed-top\">\r\n    <a class=\"navbar-brand\" href=\"#\">\r\n      <img src=\"../../assets/logo.png\" alt=\"Logo\" title=\"Logo\" />\r\n    </a>\r\n    <button\r\n      class=\"navbar-toggler\"\r\n      type=\"button\"\r\n      data-toggle=\"collapse\"\r\n      data-target=\"#navbarResponsive\"\r\n      (click)= \"navbarOpen = !navbarOpen\"\r\n      \r\n      \r\n    >\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n      <ul class=\"navbar-nav ml-auto\">\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" href=\"#home\">Home</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" href=\"#about\">About</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" href=\"#portfolio\">Portfolio</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\"  href=\"#skills\">Skills</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" href=\"#contact\">Contact</a>\r\n        </li>\r\n        <li class=\"nav-item dropdown offset\">\r\n          <a\r\n            class=\"nav-link dropdown-toggle\"\r\n            href=\"#\"\r\n            id=\"navbarDropdown\"\r\n            role=\"button\"\r\n            data-toggle=\"dropdown\"\r\n            aria-haspopup=\"true\"\r\n            aria-expanded=\"false\"\r\n          >\r\n            Blog Zone\r\n          </a>\r\n          <div class=\"dropdown-menu bg-dark\" aria-labelledby=\"navbarDropdown\">\r\n            <a\r\n              (click)=\"router.navigate(['/login'])\"\r\n              class=\"nav-link\"\r\n              routerLinkActive=\"active\"\r\n              >Login</a\r\n            >\r\n            <a\r\n              (click)=\"router.navigate(['/register'])\"\r\n              class=\"nav-link\"\r\n              routerLinkActive=\"active\"\r\n              >Register</a\r\n            >\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </nav>\r\n  <!-- Landing Page -->\r\n  <div class=\"landing\">\r\n    <div class=\"home-wrap\">\r\n      <div class=\"home-inner\"[ngStyle]=\"{ 'background-image': 'url(../../assets/galaxy.jpg)' }\"\r\n      appBackgroundImage\r\n      (imageLoaded)=\"loaded()\"></div>\r\n    </div>\r\n\r\n    <div class=\"col-12 caption\">\r\n      <h1 class=\"text-light text-uppercase pb-3 pb-mb-4\">\r\n        Lidia Davidson Personal WebPage\r\n      </h1>\r\n      <a href=\"#portfolio\" class=\"btn btn-outline-light\">See my work</a>\r\n    </div>\r\n  </div>\r\n\r\n  <div id=\"about\" class=\"offset\"></div>\r\n\r\n  <!-- Informational part what tools were used to create this portfolio -->\r\n  <div class=\"container-fluid\">\r\n  <div class=\"row justify-content-center text-center py-5\">\r\n    <div class=\"col-11 col-md-10 col-lg-9\">\r\n      <h2>\r\n        The portfolio runs on MEAN stack \r\n      </h2>\r\n    </div>\r\n  </div>\r\n</div>\r\n  <!-- About Page -->\r\n  <div class=\"jumbotron text-center pt-5 mb-0\" id=\"jumbotron\">\r\n    <div class=\"row justify-content-start align-items-center\" id=\"aboutRow\">\r\n      <div class=\"col-lg-5\">\r\n        <div class=\"about_img\">\r\n          <img class=\"aboutMePhoto\" src=\"../../assets/me.png\" alt=\"me\" />\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"offset-lg-1 col-lg-5\">\r\n        <div class=\"main_title text-left\">\r\n          <h1>Web Developer <br /></h1>\r\n          <br />\r\n          <p class=\"aboutMe\">\r\n            Hi! I am Lidia from Corona, Ca. Tech inspires me to go forward to\r\n            explore, analyze, test and apply what I have learned to new\r\n            projects. I am a passionate web developer, who won't sit a day\r\n            without finding new exciting tools that help me to build something\r\n            amazing. My recent experience connected with developing Angular\r\n            applications.\r\n          </p>\r\n          <a class=\"light_btn\" href=\"../../assets/Lidia Davidson - Resume.pdf\"\r\n            ><span>Download Resume</span></a\r\n          >\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Portfolio page-->\r\n  <div class=\"portfolio_section\" id=\"portfolio\" class=\"offset\">\r\n    <div class=\"container-fluid text-center py-5 mx-0\">\r\n      <h2 class=\"portfolio\">Portfolio</h2>\r\n      <div class=\"portfolioContainer\">\r\n        <ul class=\"portfolio_items grid\">\r\n          <li class=\"col-sm-4 col-xs-6 xs-padding single_item branding\">\r\n            <figure class=\"portfolio_item\">\r\n              <img\r\n                class = \"portImg\"\r\n                src=\"../../assets/health.jpg\"\r\n                width=\"405px\"\r\n                height=\"285px\"\r\n                alt=\"Portfolio Item\"\r\n              />\r\n              <div class=\"hover_effect\">\r\n                <a href=\"https://better-health.herokuapp.com/\">\r\n                  <span class=\"comment\"\r\n                  >BetterHealth</span>\r\n                </a>\r\n              </div>\r\n            </figure>\r\n          </li>\r\n          <li class=\"col-sm-4 col-xs-6 xs-padding single_item photo\">\r\n            <figure class=\"portfolio_item\">\r\n              <img\r\n                class = \"portImg\"\r\n                src=\"../../assets/travel.jpg\"\r\n                width=\"405px\"\r\n                height=\"285px\"\r\n                alt=\"Portfolio Item\"\r\n              />\r\n              <div class=\"hover_effect\">\r\n                <a href=\" https://avrybrdly93.github.io/Tour/\">\r\n                  <span class=\"comment\"> Tour Project</span>\r\n                </a>\r\n              </div>\r\n            </figure>\r\n          </li>\r\n          <li class=\"col-sm-4 col-xs-6 xs-padding single_item branding\">\r\n            <figure class=\"portfolio_item\">\r\n              <img\r\n                class = \"portImg\"\r\n                src=\"../../assets/cards.jpg\"\r\n                width=\"405px\"\r\n                height=\"285px\"\r\n                alt=\"Portfolio Item\"\r\n              />\r\n              <div class=\"hover_effect\">\r\n                <a href=\"https://jsfiddle.net/LidiaWebDev/0nkuh78t/\"\r\n                  ><span class=\"comment\">Signature Pad </span>\r\n                </a>\r\n              </div>\r\n            </figure>\r\n          </li>\r\n          <li class=\"col-sm-4 col-xs-6 xs-padding single_item branding\">\r\n            <figure class=\"portfolio_item\">\r\n              <img\r\n                class = \"portImg\"\r\n                src=\"../../assets/crystal.jpg\"\r\n                width=\"405px\"\r\n                height=\"285px\"\r\n                alt=\"Portfolio Item\"\r\n              />\r\n              <div class=\"hover_effect\">\r\n                <a href=\"https://lidiawebdev.github.io/unit-4-game/\">\r\n                  <span class=\"comment\">Crystal Collector</span>\r\n                </a>\r\n              </div>\r\n            </figure>\r\n          </li>\r\n          <li class=\"col-sm-4 col-xs-6 xs-padding single_item print\">\r\n            <figure class=\"portfolio_item\">\r\n              <img\r\n                class = \"portImg\"\r\n                src=\"../../assets/trivia.jpg\"\r\n                width=\"405px\"\r\n                height=\"285px\"\r\n                alt=\"Portfolio Item\"\r\n              />\r\n              <div class=\"hover_effect\">\r\n                <a href=\"https://lidiawebdev.github.io/TriviaGame/\">\r\n                  <span class=\"comment\">Trivia Game</span>\r\n                </a>\r\n              </div>\r\n            </figure>\r\n          </li>\r\n          <li class=\"col-sm-4 col-xs-6 xs-padding single_item website\">\r\n            <figure class=\"portfolio_item\">\r\n              <img\r\n                class = \"portImg\"\r\n                src=\"../../assets/gif.jpg\"\r\n                width=\"405px\"\r\n                height=\"285px\"\r\n                alt=\"Portfolio Item\"\r\n              />\r\n              <div class=\"hover_effect\">\r\n                <a href=\"https://lidiawebdev.github.io/GifTastic/\">\r\n                  <span class=\"comment\">GifTastic</span>\r\n                </a>\r\n              </div>\r\n            </figure>\r\n          </li>\r\n\r\n          <li class=\"col-sm-4 col-xs-6 xs-padding single_item branding\">\r\n            <figure class=\"portfolio_item\">\r\n              <img\r\n                class = \"portImg\"\r\n                src=\"../../assets/music.jpg\"\r\n                width=\"405px\"\r\n                height=\"285px\"\r\n                alt=\"burger\"\r\n              />\r\n              <div class=\"hover_effect\">\r\n                <a href=\"https://sublme-music.herokuapp.com/\">\r\n                  <span class=\"comment\">Sublme Music App</span>\r\n                </a>\r\n              </div>\r\n            </figure>\r\n          </li>\r\n\r\n          <li class=\"col-sm-4 col-xs-6 xs-padding single_item print\">\r\n            <figure class=\"portfolio_item\">\r\n              <img\r\n                class = \"portImg\"\r\n                src=\"../../assets/timer.jpg\"\r\n                width=\"405px\"\r\n                height=\"285px\"\r\n                alt=\"Portfolio Item\"\r\n              />\r\n              <div class=\"hover_effect\">\r\n                <a href=\"https://jsfiddle.net/LidiaWebDev/rqpuhz8k/246/\">\r\n                  <span class=\"comment\">Timer Modular Code</span>\r\n                </a>\r\n              </div>\r\n            </figure>\r\n          </li>\r\n          <li class=\"col-sm-4 col-xs-6 xs-padding single_item branding\">\r\n            <figure class=\"portfolio_item\">\r\n              <img\r\n                class = \"portImg\"\r\n                src=\"../../assets/npm.jpg\"\r\n                width=\"405px\"\r\n                height=\"285px\"\r\n                alt=\"Portfolio Item\"\r\n              />\r\n              <div class=\"hover_effect\">\r\n                <a\r\n                  href=\"https://www.npmjs.com/package/order-wizard-schematic-onlyfortest\"\r\n                >\r\n                  <span class=\"comment\">Angular Schematics NPM</span>\r\n                </a>\r\n              </div>\r\n            </figure>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Blockquote part. To DO: Create an API to display all the programming related inspirational quotes.\r\n     JSON file will include all the picked by me quotes. -->\r\n\r\n  <div class=\"quote container-fluid\">\r\n    <p>\r\n      <q class=\"blockquote\"\r\n        >Experience is the name everyone gives to their mistakes. Oscar Wilde.</q\r\n      >\r\n    </p>\r\n  </div>\r\n\r\n  <!-- Technical Skills part  -->\r\n\r\n  <div id=\"skills\" class=\"offset\">\r\n    <div class=\"jumbotron text-center pb-5 mb-0\">\r\n      <h2 class=\"heading\">Technical Skills</h2>\r\n\r\n      <div class=\"row no-gutters mb-5 icons d-flex justify-content-around\">\r\n        <div class=\"col-11 col-md-10\">\r\n          <div class=\"skillset row pt-3 justify-content-around\">\r\n            <div\r\n              class=\"m4 colored skill-icon devicon-html5-plain-wordmark\"\r\n            ></div>\r\n            <div\r\n              class=\"m4 colored skill-icon devicon-bootstrap-plain colored\"\r\n            ></div>\r\n            <div\r\n              class=\"m4 colored skill-icon devicon-sass-original colored\"\r\n            ></div>\r\n            <div\r\n              class=\"m4 colored skill-icon devicon-angularjs-plain colored\"\r\n            ></div>\r\n            <div class=\"m4 colored skill-icon devicon-typescript-plain\"></div>\r\n            <div class=\"m4 colored skill-icon devicon-c-line colored\"></div>\r\n          </div>\r\n          <div class=\"skillset row pt-3 justify-content-around\">\r\n            <div\r\n              class=\"m4 colored skill-icon devicon-mongodb-plain-wordmark colored\"\r\n            ></div>\r\n            <div\r\n              class=\"m4 colored skill-icon devicon-amazonwebservices-original colored\"\r\n            ></div>\r\n            <div\r\n              class=\"m4 colored skill-icon devicon-mysql-plain colored\"\r\n            ></div>\r\n            <div\r\n              class=\"m4 colored skill-icon devicon-nodejs-plain-wordmark colored\"\r\n            ></div>\r\n            <div\r\n              class=\"m4 colored skill-icon devicon-express-original-wordmark colored\"\r\n            ></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- End Jumbotron -->\r\n    </div>\r\n    <!-- End Testimonials Section -->\r\n\r\n    <!-- Start Contact Section -->\r\n    <div id=\"contact\" class=\"offset\"></div>\r\n      <div class=\"container-fluid footer\">\r\n        <div class=\"row pt-4 pb-5 justify-content-center\">\r\n          <div\r\n            class=\"col-sm-11 col-md-9 col-lg-6 text-light text-center\"\r\n            id=\"footerSocial\"\r\n          >\r\n           \r\n            <p>\r\n              If you are interested, you are welcome to contact me. I am open to\r\n              new horizons to expand. A self-starter and a team player. Connect\r\n              via any offered platforms below.\r\n            </p>\r\n\r\n            <ul class=\"social mt-lg-0 mt-4\">\r\n              <li>\r\n                <a href=\"mailto:davidson.lidiafirst@gmail.com\">\r\n                  <i class=\"fa fa-envelope-square fa-3x\"></i\r\n                ></a>\r\n              </li>\r\n              <li>\r\n                <a\r\n                  href=\"https://www.linkedin.com/in/lidiadavidson/\"\r\n                  target=\"_blank\"\r\n                >\r\n                  <i class=\"fab fa-linkedin fa-3x\"></i\r\n                ></a>\r\n              </li>\r\n              <li>\r\n                <a href=\"https://twitter.com/LidiaDa81393011\" target=\"_blank\">\r\n                  <i class=\"fab fa-twitter-square fa-3x\"></i\r\n                ></a>\r\n              </li>\r\n              <li>\r\n                <a href=\"https://dev.to/lidiawebdev\" target=\"_blank\">\r\n                  <i class=\"fab fa-dev fa-3x\"></i\r\n                ></a>\r\n              </li>\r\n              <li>\r\n                <a href=\"https://www.facebook.com/rusfinlidia\" target=\"_blank\">\r\n                  <i class=\"fab fa-facebook-square fa-3x\"></i\r\n                ></a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n\r\n          <hr class=\"socket w-100 mt-5\" />\r\n          <p class=\"mb-0 text-light\">\r\n            &copy; <a href=\"#\" target=\"_blank\">Lidia Davidson 2020</a>\r\n          </p>\r\n        </div>\r\n        <!--End of  Row -->\r\n      </div>\r\n    \r\n  </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UserService, TokenPayload} from '../service/user.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n  // providers: [UserService]\r\n})\r\nexport class LoginComponent {\r\n\r\n  credentials: TokenPayload = {\r\n    _id: '',\r\n    email: '',\r\n    username: '',\r\n    password: ''\r\n  }\r\n  \r\nconstructor(private loginService: UserService, private router: Router) {window.scrollTo(0, 0);}\r\n\r\n validateLogin() {\r\n\r\n    if(this.credentials.email && this.credentials.password) {\r\n      console.log('connected successfully, email is ',this.credentials.email,'; password is ',this.credentials.password)\r\n\r\n      this.loginService.validateLogin(this.credentials).subscribe(result =>\r\n     {console.log('result is ', result);\r\n     if (result) {\r\n      this.router.navigate(['/home']);\r\n      \r\n     }else {\r\n       alert(\"Such user does not exist, please check your credentials and try again\")\r\n       this.router.navigate(['/login']);\r\n     }\r\n    }, error => {\r\n      console.log('error is ', error);\r\n      alert('Wrong login credentials, please try again')\r\n    });\r\n    \r\n    } else {\r\n      alert('Enter you email and the password');\r\n    }\r\n  }\r\n\r\n\r\n  moveToRegister() {\r\n    this.router.navigate(['/register'])\r\n  }\r\n\r\n  loaded(){\r\n    console.log('loaded');\r\n  }\r\n\r\n \r\n}\r\n\r\n","<div\r\n  class=\"container\"\r\n  [ngStyle]=\"{ 'background-image': 'url(../../assets/galaxy.jpg)' }\"\r\n  appBackgroundImage\r\n  (imageLoaded)=\"loaded()\"\r\n>\r\n  <div class=\"d-flex justify-content-center h-100\">\r\n    <div class=\"card\">\r\n      <div class=\"card-header\">\r\n        <h3>Login</h3>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <form (submit)=\"validateLogin()\">\r\n          <div class=\"input-group form-group\">\r\n            <div class=\"input-group-prepend\">\r\n              <span class=\"input-group-text\"\r\n                ><i class=\"fas fa-user fa-lg\"></i\r\n              ></span>\r\n            </div>\r\n            <input\r\n              type=\"email\"\r\n              class=\"form-control\"\r\n              name=\"email\"\r\n              placeholder=\"Email\"\r\n              [(ngModel)]=\"credentials.email\"\r\n            />\r\n          </div>\r\n          <div class=\"input-group form-group\">\r\n            <div class=\"input-group-prepend\">\r\n              <span class=\"input-group-text\"\r\n                ><i class=\"fas fa-unlock fa-lg\"></i\r\n              ></span>\r\n            </div>\r\n            <input\r\n              type=\"password\"\r\n              class=\"form-control\"\r\n              name=\"password\"\r\n              placeholder=\"Password\"\r\n              [(ngModel)]=\"credentials.password\"\r\n            />\r\n          </div>\r\n          <div class=\"row align-items-center remember\">\r\n            <input type=\"checkbox\" />Remember Me\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Login\"\r\n              class=\"btn float-right login_btn\"\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <div class=\"card-footer\">\r\n        <div class=\"d-flex justify-content-center links\"></div>\r\n        <div class=\"d-flex justify-content-center\">\r\n          <a href=\"#\">Go Back</a>\r\n          <!-- TO DO ! Forgot your password part -->\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","export class Post {\r\nconstructor(){\r\n\t\tthis._id = '';\r\n\t\tthis.title = '';\r\n\t\tthis.description = '';\r\n\t}\r\n\tpublic _id;\r\n\tpublic title;\r\n\tpublic description;\r\n}","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UserService, TokenPayload } from '../service/user.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss'],\r\n})\r\nexport class RegisterComponent {\r\n  credentials: TokenPayload = {\r\n    _id: '',\r\n    email: '',\r\n    username: '',\r\n    password: '',\r\n  };\r\n\r\n  constructor(private auth: UserService, private router: Router) {}\r\n\r\n  // ngOnInit() {}\r\n\r\n  moveToLogin() {\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n  register() {\r\n    if (\r\n      this.credentials.email &&\r\n      this.credentials.username &&\r\n      this.credentials.password\r\n    ) {\r\n      this.auth.register(this.credentials).subscribe(\r\n        () => {\r\n          this.router.navigate(['/login']);\r\n          console.log('You are successfully registered');\r\n        },\r\n        (err) => {\r\n          console.error(err);\r\n          alert(\r\n            'Credentials do not match or left an empty field, please try again'\r\n          );\r\n        }\r\n      );\r\n    } else {\r\n      alert('The fields are empty, please fill each required field');\r\n    }\r\n  }\r\n\r\n  loaded() {\r\n    console.log('loaded');\r\n  }\r\n}\r\n","<div class=\"container\" [ngStyle]=\"{ 'background-image': 'url(../../assets/galaxy.jpg)' }\"\r\nappBackgroundImage\r\n(imageLoaded)=\"loaded()\">\r\n  <div class=\"d-flex justify-content-center h-100\">\r\n    <div class=\"card\">\r\n      <div class=\"card-header d-flex justify-content-between\">\r\n        <h3>Register</h3>\r\n        <a href=\"#\">Go Back</a>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <form (submit)=\"register()\">\r\n          <div class=\"input-group form-group\">\r\n         \r\n            <input type=\"text\" class=\"form-control\" name=\"email\" placeholder=\"Enter your email\" [(ngModel)]=\"credentials.email\">\r\n          </div>\r\n          <div class=\"form-group\">\r\n            \r\n            <input type=\"text\" class=\"form-control\" name=\"username\" placeholder=\"Enter your Username\" [(ngModel)]=\"credentials.username\">\r\n          </div>\r\n          <div class=\"form-group\">\r\n           \r\n            <input type=\"email\" class=\"form-control\" name=\"email\" placeholder=\"Enter Password\" [(ngModel)]=\"credentials.password\">\r\n          </div>\r\n          <button type=\"submit\" class=\"btn float-right register_btn\">Register</button>\r\n        </form>\r\n      </div>\r\n        <div class=\"card-footer\">\r\n          <div class=\"d-flex justify-content-center links\"></div>\r\n         </div>\r\n      </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n<!-- ------------------------\r\n<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6 mt-5 mx-auto\">\r\n      <form (submit)=\"register()\">\r\n        <h1 class=\"h3 mb-3 font-weight-normal\">Register</h1>\r\n        <div class=\"form-group\">\r\n          <label for=\"name\">Email</label>\r\n          <input type=\"text\" class=\"form-control\" name=\"email\" placeholder=\"Enter your email\" [(ngModel)]=\"credentials.email\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"name\">Username</label>\r\n          <input type=\"text\" class=\"form-control\" name=\"username\" placeholder=\"Enter your Username\" [(ngModel)]=\"credentials.username\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"email\">Password</label>\r\n          <input type=\"email\" class=\"form-control\" name=\"email\" placeholder=\"Enter Password\" [(ngModel)]=\"credentials.password\">\r\n        </div>\r\n   \r\n        <button type=\"submit\" class=\"btn btn-lg btn-primary btn-block\">Register!</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div> -->","import { Component } from '@angular/core';\r\n \r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './root.component.html'\r\n})\r\nexport class RootComponent {\r\n   \r\n}","<router-outlet></router-outlet>\r\n","import { Injectable } from '@angular/core'\r\nimport { Router, CanActivate } from '@angular/router'\r\nimport { UserService } from './user.service'\r\n\r\n@Injectable()\r\nexport class AuthGuardService implements CanActivate {\r\n  constructor(private loginService: UserService, private router: Router) {}\r\n\r\n  canActivate() {\r\n    if (!this.loginService.isLoggedIn()) {\r\n      this.router.navigate(['/'])\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs/internal/Subject';\r\nimport { Post } from '../models/post';\r\n\r\n \r\n@Injectable()\r\nexport class CommonService {\r\n\r\n    //I have declared a Subject called postAdded_Observable to keep track of the new blog post addition to the database. Whenever \r\n    //a new blog post is added to the database,  call the notifyPostAddition method, which will notify the subscribers about the update.\r\n \r\n    public postAdded_Observable = new Subject();\r\n    //to define an observable to keep track of when the edit button is clicked.\r\n    public postEdit_Observable = new Subject();\r\n    public post_to_be_edited;\r\n \r\n    constructor(){\r\n        this.post_to_be_edited = new Post();\r\n \r\n    }\r\n \r\n    notifyPostAddition(){\r\n        this.postAdded_Observable.next();\r\n    }\r\n\r\n    notifyPostEdit(){\r\n        this.postEdit_Observable.next();\r\n    }\r\n     \r\n    setPostToEdit(post: Post){\r\n        this.post_to_be_edited = post;\r\n        this.notifyPostEdit();\r\n    }\r\n \r\n}","import { Injectable } from '@angular/core'\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { Observable, of } from 'rxjs'\r\nimport { map } from 'rxjs/operators'\r\nimport { Router } from '@angular/router'\r\nimport { User } from '../models/user'\r\n\r\nexport interface UserDetails {\r\n  \r\n  _id: string\r\n  email: string\r\n  username: string\r\n  password: string\r\n  exp: number\r\n  iat: number\r\n}\r\n\r\ninterface TokenResponse {\r\n  token: string\r\n}\r\n\r\nexport interface TokenPayload {\r\n  _id: string\r\n  email: string\r\n  username: string\r\n  password: string\r\n}\r\n\r\n@Injectable()\r\nexport class UserService {\r\n  private token: string\r\n  list: User []\r\n\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n  \r\n  private saveToken(token: string): void {\r\n    localStorage.setItem('usertoken', token)\r\n    this.token = token\r\n  }\r\n\r\n  private getToken(): string {\r\n    if (!this.token) {\r\n      this.token = localStorage.getItem('usertoken')\r\n    }\r\n    return this.token\r\n  }\r\n\r\n  public getUserDetails(): UserDetails {\r\n    const token = this.getToken()\r\n    let payload\r\n    if (token) {\r\n      payload = token.split('.')[1]\r\n      payload = window.atob(payload)\r\n      return JSON.parse(payload)\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  public isLoggedIn(): boolean {\r\n    const user = this.getUserDetails()\r\n    if (user) {\r\n      return user.exp > Date.now() / 1000\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n //Register a new user - add him to the db\r\n  public register(user: TokenPayload): Observable<any> {\r\n     const base = this.http.post(`http://127.0.0.1:3000/users/register`, user)\r\n       const request = base.pipe(\r\n      map((data: TokenResponse) => {\r\n        if (data.token) {\r\n          this.saveToken(data.token)\r\n        }\r\n        return data\r\n       \r\n      })\r\n    )\r\n   return request\r\n  }\r\n\r\n   //login already an existing user \r\n  private request(method: 'post', type: 'login', user?:TokenPayload): Observable<any> {\r\n    let base;\r\n\r\n    if (method === 'post') {\r\n      base = this.http.post(`http://127.0.0.1:3000/users/login`, user);\r\n    }\r\n    const request = base.pipe(\r\n      map((data: TokenResponse) => {\r\n        if (data.token) {\r\n          this.saveToken(data.token)\r\n        }\r\n        return data\r\n      })\r\n  )\r\n  return request;\r\n  }\r\n  \r\n  \r\n  public validateLogin(user: TokenPayload): Observable<any> {\r\n    return this.request('post', 'login', user)\r\n  }\r\n    \r\n  \r\n\r\n\r\n  public profile(): Observable<any> {\r\n    return this.http.get(`http://127.0.0.1:3000/users/home`, {\r\n      headers: { Authorization: ` ${this.getToken()}` }\r\n    })\r\n  }\r\n\r\n  public logout(): void {\r\n    this.token = ''\r\n    window.localStorage.removeItem('usertoken')\r\n    this.router.navigateByUrl('/')\r\n  }\r\n}","import { Component, OnInit, ViewChild, ElementRef, TemplateRef } from '@angular/core';\nimport { ShowPostService } from './show-post.service';\n;\nimport { CommonService, } from '../service/common.service';\nimport { Post } from '../models/post';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal/bs-modal-ref.service';\n \n@Component({\n  selector: 'app-show-post',\n  templateUrl: './show-post.component.html',\n  styleUrls: ['./show-post.component.scss'],\n  providers: [ ShowPostService ]\n})\nexport class ShowPostComponent implements OnInit {\n \n  @ViewChild('closeBtn') closeBtn: ElementRef;\n \n  public posts : any [];\n  public post_to_delete;\n  modalRef: BsModalRef;\n \n  constructor(private showPostService: ShowPostService, private commonService: CommonService, private modalService: BsModalService) {\n       \n  }\n \n  ngOnInit(){\n    this.getAllPost();\n \n    this.commonService.postAdded_Observable.subscribe(res => {\n      this.getAllPost();\n    });\n  }\n \n  setDelete(template: TemplateRef<any>, post: Post){\n     this.modalRef = this.modalService.show(template);\n     this.post_to_delete = post;\n  }\n \n  unsetDelete(){\n    this.post_to_delete = null;\n  }\n \n  getAllPost(){\n    this.showPostService.getAllPost().subscribe(result => {\n        console.log('result is ', result);\n        this.posts = result['data'];\n    });\n  }\n \n  editPost(post: Post){\n    this.commonService.setPostToEdit(post);\n  }\n \n  deletePost(){\n    this.showPostService.deletePost(this.post_to_delete._id).subscribe(res => {\n     \n      this.getAllPost();   \n    })\n  }\n \n}","<div class=\"list-group\">\n  \n<!-- Temporary solution, working on the establishing the right navigation to the posts in mongoDB -->\n<a href=\"https://twitter.com/LidiaDa81393011\" class=\"list-group-item list-group-item-action flex-column align-items-start\">\n  <div class=\"d-flex w-100 justify-content-between\">\n    <h5 class=\"mb-1\">Growing Tech Twitter Network</h5>\n    <small class=\"text-muted\">2 days ago</small>\n  </div>\n  <p class=\"mb-1\">Hello to the tech world! I would love to grow my network and get to know great talented developers to \n     learn, communicate and cooperate together. Click on this post and check my Twitter Diary on my daily coding journey.\n  </p>\n\n</a>\n<a class=\"list-group-item list-group-item-action flex-column align-items-start\">\n  <div class=\"d-flex w-100 justify-content-between\">\n    <h5 class=\"mb-1\">The idea for this blog</h5>\n    <small>3 days ago</small>\n  </div>\n  <p class=\"mb-1\">Hello! My name is Lidia. My initial plan was to create a Portfolio page. However, the more I thought on the structure, the more I realized that I would like to have a blog in addition to my portfolio.\n    I am working on the content for now and plan to launch the official blog on tech topics. --COMING SOON--UNDER CONSTRUCTION\n  </p>\n</a>\n\n <!-- <TO DO FOR THE NEXT PART OF THE PROJECT: BACKEND a *ngFor=\"let post of posts\" class=\"list-group-item list-group-item-action flex-column align-items-start\">\n      <div class=\"d-flex w-100 justify-content-between\">\n          <h5 class=\"mb-1\">{{ post.title }}</h5>\n          <small>3 days ago</small>\n      </div>\n      <p class=\"mb-1\">{{ post.description }}</p>\n\n      <div class=\"d-flex w-100 justify-content-between\">\n      <small>read more...</small>\n\n      <div>\n        <i title=\"Edit\" class=\"fas fa-edit\"(click)=\"editPost(post)\" aria-hidden=\"true\"></i>\n        <i title=\"Delete\" data-target=\"#deleteModal\" (click)=\"setDelete(template, post)\" class=\"fas fa-trash-alt\" aria-hidden=\"true\"></i>\n     </div>\n     \n    </div>\n  </TO> -->\n<!-- </div> -->\n\n\n<!-- Modal popup code for the show post Component -->\n<!-- Modal -->\n<!-- <div class=\"modal fade\" id=\"deleteModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\" role=\"document\"> -->\n    <ng-template #template>\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Delete Post</h5>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        Are you sure ?\n      </div>\n      <div class=\"modal-footer\">\n        <button #closeBtn (click)=\"unsetDelete()\" type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cancel</button>\n        <button (click)=\"deletePost()\" type=\"button\" class=\"btn btn-primary\">Delete</button>\n      </div>\n    </div>\n  </ng-template>\n  <!-- </div>\n</div> -->","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Post } from '../models/post'\r\nimport { Observable } from 'rxjs';\r\n\r\n \r\n@Injectable()\r\nexport class ShowPostService {\r\n \r\n    constructor(private http: HttpClient){\r\n      \r\n \r\n    }\r\n\r\n getAllPost(): Observable<any> {\r\n     console.log(\"is this here??\")\r\n     return this.http.post('/api/post/getAllPost', {})\r\n }\r\n\r\n deletePost(id){\r\n    return this.http.post('/api/post/deletePost',{id : id})\r\n}\r\n \r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: true\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}